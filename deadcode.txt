/**--------First scenario-Transfer agent START
            case "caceis.nameIntent":
var clientName;
res.json({
    messages: [{
        "type": 0,
        "platform": "facebook",
        "speech": "Can you tell me in a few words how I can help? Would you like me to query the data on your behalf ?"
    },
    {
        "type": 1,
        "platform": "facebook",
        "title": "Please select",
        "subtitle": "",
        "buttons": [{
            "text": "Yes Please",
            "postback": "yes"
        },
        {
            "text": "No I am Fine",
            "postback": "no"
        }]
    }]
}).end();
break;
            case "caceis.nameIntent-yes":
res.json({
    messages: [{
        "type": 0,
        "platform": "facebook",
        "speech": "Please can you tell me your account number with us"
    }]
}).end();
break;
            case "caceis.nameIntent-yes-getAccountNumber":
var accountNumber = req.body.result.parameters.accountNumber;
return helper.getCustomerDetails(accountNumber).then((result) => {
    console.log('customer count', result.length);
    if (result.length > 0) {
        res.json({
            messages: [{
                "type": 0,
                "platform": "facebook",
                "speech": "Thanks for sharing the information. Could you please share your query ?"
            }]
        }).end();
    } else {
        res.json({
            messages: [{
                "type": 0,
                "platform": "facebook",
                "speech": "Cant find account information. Please try again."
            }]
        }).end();
    }
}).catch((err) => {
    console.log("get customer details err", err);
    res.json({
        messages: [
            {
                "type": 0,
                "platform": "facebook",
                "speech": "Something went wrong"
            }
        ]
    }).end();
});
break;
            case "caceis.rightsIssueQuery":
var securityName = req.body.result.parameters.securityName;
return helper.getSecurityDetailsByName(securityName).then((result) => {
    console.log("securityinfo", result);
    console.log("securityinfo row count", result.length);
    if (result.length > 0) {
        res.json({
            messages: [
                {
                    "type": 0,
                    "platform": "facebook",
                    "speech": "You are talking about , ISIN number " + result[0].ISIN + " and  Stock name - " + result[0].Security_Name + " ?"
                }
            ],
            contextOut: [
                {
                    name: "security-info",
                    parameters: {
                        securityISIN: result[0].ISIN,
                        securityName: result[0].Security_Name
                    },
                    lifespan: 5
                }
            ]
        }).end();
    } else {
        res.json({
            messages: [
                {
                    "type": 0,
                    "platform": "facebook",
                    "speech": "Unable to find security information."
                }
            ]
        }).end();
    }
}).catch((err) => {
    console.log("fetch security details err", err);
    res.json({
        messages: [
            {
                "type": 0,
                "platform": "facebook",
                "speech": "Something went wrong"
            }
        ]
    }).end();
});
break;
            case "caceis.rightsIssueQuery-confirm":
var isin = req.body.result.contexts[2].parameters.securityISIN;
var securityName = req.body.result.contexts[0].parameters.securityName;
var accountNumber = req.body.result.contexts[0].parameters.accountNumber;
console.log("isin: " + isin + " ,securityName: " + securityName + " ,accountNumber: " + accountNumber);

return helper.getHoldingAndCorporateActionData(accountNumber, isin).then((result) => {
    console.log('Holdings data', result[0][0]);
    console.log('Holdings data row count', result[0].length);
    console.log('corporate action data', result[1][0]);
    console.log('corporate action data', result[1].length);

    var holdingsInfo = (result[0].length > 0) ? "You have " + result[0][0].quantity + " quantiy of " + securityName + " shares as of now. Voluntary corporate action for rights issue is initiated by  " + securityName + " ."
        : "Unable to find holdings for this ISIN from " + securityName;
    var corporateActionInfo = (result[1].length > 0) ? result[1][0].Event_Name + " issue is offered at " + result[1][0].Pershare_Offer + ":1 @ Rs " + result[1][0].Pershare_Offer + ". Would you be interested to opt for rights issue?."
        : "Unable to find records for the corporate action events for the ISIN";
    var contextArray = (result[1].length > 0) ?
        [
            {
                name: "corporateactionvent-info",
                parameters: {
                    Event_Date: result[1][0].Event_Date,
                    Payment_Date: result[1][0].Payment_Date,
                    Settlement_Date: result[1][0].Settlement_Date
                },
                lifespan: 5
            }
        ] : [];
    var response = {
        messages: [
            {
                "type": 0,
                "platform": "facebook",
                "speech": holdingsInfo
            },
            {
                "type": 0,
                "platform": "facebook",
                "speech": corporateActionInfo
            }
        ],
        contextOut: contextArray
    };

    if (result[1].length > 0 && result[0].length > 0) {
        response.messages.push({
            "type": 1,
            "platform": "facebook",
            "title": "Please select",
            "subtitle": "",
            "buttons": [{
                "text": "Yes",
                "postback": "yes"
            },
            {
                "text": "No",
                "postback": "no"
            }]
        });
    }

    console.log("respnbse", JSON.stringify(response));

    res.json(response).end();
}).catch((err) => {
    console.log("err", err);
    res.json({
        messages: [
            {
                "type": 0,
                "platform": "facebook",
                "speech": "Something went wrong"
            }
        ]
    }).end();
});
break;
            case "caceis.rightsIssueQuery-confirm-yes":
res.json({
    messages: [{
        "type": 0,
        "platform": "facebook",
        "speech": "I take the response as \"Yes\" for corporate action for rights issue."
    },
    {
        "type": 0,
        "platform": "facebook",
        "speech": "Thanks for sharing the information. Would you like to know the important dates for the rights issue."
    }
    ]
}).end();
break;
            case "caceis.rightsIssueQuery-confirm-no":
res.json({
    messages: [{
        "type": 0,
        "platform": "facebook",
        "speech": "I take the response as \"No\" for corporate action for rights issue."
    },
    {
        "type": 0,
        "platform": "facebook",
        "speech": "Thanks for sharing the information. Would you like to know the important dates for the rights issue."
    }]
}).end();
break;
            case "caceis.rightsIssueQuery-confirm-yes-yes":
var Event_Date = req.body.result.contexts[5].parameters.Event_Date;
var Settlement_Date = req.body.result.contexts[5].parameters.Settlement_Date;
var Payment_Date = req.body.result.contexts[5].parameters.Payment_Date;
console.log("Payment_Date: " + Payment_Date + " ,Settlement_Date: " + Settlement_Date + " ,Event_Date:" + Event_Date);

res.json({
    messages: [
        {
            "type": 0,
            "platform": "facebook",
            "speech": "Important date for the corporate actions for your reference.\n\nLast date for response - " + Event_Date + "\n\nPayment date - " + Payment_Date + "\n\nSettlement date - " + Settlement_Date + ""
        }
    ],
    contextOut: [
        {
            name: "subject-info",
            parameters: {
                Subject: "Customer query on corporate actions"
            },
            lifespan: 3
        }
    ]
}).end();
break;
            case "caceis.rightsIssueQuery-confirm-no-yes":
res.json({
    messages: [{
        "type": 0,
        "platform": "facebook",
        "speech": "Last date for response - 21-05-2018\nPayment date - 25-05-2018\nSettlement date - 28-05-2018"
    }],
    contextOut: [
        {
            name: "subject-info",
            parameters: {
                Subject: "Customer query on corporate actions"
            },
            lifespan: 3
        }
    ]
}).end();
break;
First scenario-Transfer agent END----------**/

/**--------Second scenario-Reconciliation issue START----------**/
            case "caceis.raiseReconciliationIssue":
                var securityName = req.body.result.parameters.securityName;
                return helper.getSecurityDetailsByName(securityName).then((result) => {
                    console.log("securityinfo", result);
                    console.log("securityinfo row count", result.length);
                    if (result.length > 0) {
                        res.json({
                            messages: [
                                {
                                    "type": 0,
                                    "platform": "facebook",
                                    "speech": "You are referring to ISIN number " + result[0].ISIN + " and  Stock name - " + result[0].Security_Name + " ?"
                                }
                            ],
                            contextOut: [
                                {
                                    name: "security-info",
                                    parameters: {
                                        securityISIN: result[0].ISIN,
                                        securityName: result[0].Security_Name
                                    },
                                    lifespan: 5
                                }
                            ]
                        }).end();
                    } else {
                        res.json({
                            messages: [
                                {
                                    "type": 0,
                                    "platform": "facebook",
                                    "speech": "Unable to find security information."
                                }
                            ]
                        }).end();
                    }
                }).catch((err) => {
                    console.log("get security details err", err);
                    res.json({
                        messages: [
                            {
                                "type": 0,
                                "platform": "facebook",
                                "speech": "Something went wrong"
                            }
                        ]
                    }).end();
                });
                break;
            case "caceis.raiseReconciliationIssue-confirm":
                var securityInfo = _.find(req.body.result.contexts, ['name', 'security-info']);
                var nameCompanyInfo = _.find(req.body.result.contexts, ['name', 'name-company-info']);
                var isin = securityInfo.parameters.securityISIN;

                //need to handle these items
                var companyName = nameCompanyInfo.parameters.companyName;
                var customerId = req.body.sessionId.split("@")[0];

                console.log("isin: " + isin + " ,company name: " + companyName + " ,customerId: " + customerId);

                return helper.getHoldingAndCorporateActionData(customerId, isin).then((result) => {
                    console.log('Holdings data', result[0][0]);
                    console.log('Holdings data row count', result[0].length);
                    console.log('corporate action data', result[1][0]);
                    console.log('corporate action data', result[1].length);

                    var holdingsInfo = (result[0].length > 0)
                        ? "Your holdings on this ISIN from " + companyName + " is " + result[0][0].quantity + "shares"
                        : "Unable to find holdings for this ISIN from " + companyName;
                    var corporateActionInfo = (result[1].length > 0)
                        ? companyName + " is providing " + result[1][0].Event_Name + " issue and its offered at " + result[1][0].Pershare_Offer + ":1 @ Rs " + result[1][0].Pershare_Offer + ". What is your query about ?"
                        : "Unable to find records for the corporate action events for the ISIN";

                    res.json({
                        messages: [
                            {
                                "type": 0,
                                "platform": "facebook",
                                "speech": holdingsInfo
                            },
                            {
                                "type": 0,
                                "platform": "facebook",
                                "speech": corporateActionInfo
                            }
                        ]
                    }).end();
                }).catch((err) => {
                    console.log("err", err);
                    res.json({
                        messages: [
                            {
                                "type": 0,
                                "platform": "facebook",
                                "speech": "Something went wrong"
                            }
                        ]
                    }).end();
                });
                break;
            case "caceis.raiseReconciliationIssue-confirm-query":
                var securityInfo = _.find(req.body.result.contexts, ['name', 'security-info']);
                var nameCompanyInfo = _.find(req.body.result.contexts, ['name', 'name-company-info']);
                var securityName = securityInfo.parameters.securityName;
                var customerId = req.body.sessionId.split("@")[0];
                var isin = securityInfo.parameters.securityISIN;
                console.log("isin: " + isin + ", customerId: " + customerId + " , securityName: " + securityName);

                return helper.getTradeStatusBySecurityIdAndCustomerId(isin, customerId).then((result) => {
                    console.log("tradeinfo", result);
                    console.log("tradeinfo row count", result.length);
                    if (result.length > 0) {
                        res.json({
                            messages: [
                                {
                                    "type": 0,
                                    "platform": "facebook",
                                    "speech": "I see. I would like to inform that " + result[0].quantity + " quanity of " + securityName + " shares are " + result[0].Status + "."
                                }
                            ]
                        }).end();
                    } else {
                        res.json({
                            messages: [
                                {
                                    "type": 0,
                                    "platform": "facebook",
                                    "speech": "Trade info not found in the system."
                                }
                            ]
                        }).end();
                    }
                }).catch((err) => {
                    console.log("trade status err", err);
                    res.json({
                        messages: [
                            {
                                "type": 0,
                                "platform": "facebook",
                                "speech": "Something went wrong"
                            }
                        ]
                    }).end();
                });
                break;
            case "caceis.raiseReconciliationIssue-confirm-query-wrapup":
                res.json({
                    messages: [
                        {
                            "type": 0,
                            "platform": "facebook",
                            "speech": "I hope, we were able to clarify your queries . Do you have any further clarifications ?"
                        }
                    ]
                }).end();
                break;
            /**--------Second scenario-Reconciliation issue END----------**/